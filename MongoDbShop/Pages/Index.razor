<!-- Please excuse the dirty code like for example the lack of (S)CSS and such. -->
@page "/"
@using MongoDbShop.Entities.Shop

<!-- List all databases. -->
<div class="section">
    <h2>Databases</h2>
    <button @onclick="@(async () => await ListAllDatabases())">List all databases</button>
    <button @onclick="HideAllDatabases" disabled="@(_databasesAsJson == null)">Hide all databases</button>
    @if (_databasesAsJson != null)
    {
        <InputTextArea @bind-Value="_databasesAsJson" disabled="true" rows="20" style="width: 100%"></InputTextArea>
    }
</div>

<div class="section">
    <h2>Products</h2>

    <!-- Clear and seed. -->
    <button @onclick="@(async () => await DeleteAllProductsAndReList())">Delete all products</button>
    <button @onclick="@(async () => await SeedTestDataAndReList())">Seed test products into database</button>

    <!-- List and count all products. -->

    <h3>List and count</h3>
    <button @onclick="@(async () => await ListAllProducts())">List all products</button>
    <button @onclick="@(async () => await CountAllProducts())">Count all products. Counted: @_productCount</button>
    @if (_products.Any())
    {
        <ul>
            @foreach (Product product in _products)
            {
                <li><span style="font-weight: bold">[@product.MongoId]</span> @product.Name Quantity: @product.Quantity &euro;@product.Price Description: @product.Description</li>
            }
        </ul>
    }
    else
    {
        <p>No products or wrong database or wrong collection.</p>
    }
    <hr />

    <!-- By id. -->
    <h3>By id</h3>
    <label>Mongo id</label>
    <InputText @bind-Value="_mongoIdToFind"></InputText>
    <button @onclick="@(async () => await ById(_mongoIdToFind))">By id</button>
    @if (_productById == null)
    {
        <p>No products or wrong database or wrong collection.</p>
    }
    else
    {
        <li>[@_productById.MongoId] @_productById.Name Quantity: @_productById.Quantity &euro;@_productById.Price Description: @_productById.Description</li>
    }

    <!-- Update entire product. -->
    <h3>Update entire product</h3>
    <div>
        <div class="align-contents-vertical">
            <label>Id</label>
            <InputText @bind-Value="_replaceProduct.MongoId"></InputText>
            <button style="display: inline-block" @onclick="@(async () => await GetReplacementProduct(_replaceProduct.MongoId))">Get replacement product by id.</button>
            <label>Name</label>
            <InputText @bind-Value="_replaceProduct.Name"></InputText>
            <label>Price</label>
            <InputNumber @bind-Value="_replaceProduct.Price"></InputNumber>
            <label>Quantity</label>
            <InputNumber @bind-Value="_replaceProduct.Quantity"></InputNumber>
            <label>Description</label>
            <InputText @bind-Value="_replaceProduct.Description"></InputText>
        </div>
        <button @onclick="@(async () => await Replace(_replaceProduct))">Replace product (=full update)</button>
    </div>
    <hr />

    <!-- Increment price by 1 for specific id. -->
    <h3>Increment price by 1 for specific id</h3>
    <div class="align-contents-vertical">
        <InputText @bind-Value="_incrementPriceProductId"></InputText>
        <button @onclick="@(async () => await UpdateById(_incrementPriceProductId, 1))">Increment price for product with id @_incrementPriceProductId</button>
        @if (_updateByIdResult != null)
        {
            <p>@_updateByIdResult</p>
        }
    </div>
    <hr />

    <!-- Search for a product. -->
    <h3>Search</h3>
    <div class="align-contents-vertical">
        <label>Property name</label>
        <InputText @bind-Value="_filterPropertyName"></InputText>
        <label>Property value</label>
        <InputText @bind-Value="_filterValue"></InputText>
    </div>
    <button @onclick="@(async () => await FilterProduct(_filterPropertyName, _filterValue))">Find/Filter products</button>

    @if (_productsFiltered.Any())
    {
        <ul>
            @foreach (Product product in _productsFiltered)
            {
                <li>[@product.MongoId] @product.Name Quantity: @product.Quantity &euro;@product.Price Description: @product.Description</li>
            }
        </ul>
    }
    else
    {
        <p>No products exist or none matched.</p>
    }
    <hr />

    <!-- Insert products by json. -->
    <h3>Insert by JSON</h3>
    <InputTextArea @bind-Value="_insertJson" rows="10" style="width: 100%"></InputTextArea>
    <button @onclick="@(async () => await InsertByJson(_insertJson))">Insert product(s) using JSON.</button>
    @if (_lastInsertedIds.Any())
    {
        <p>Last inserted ids: @string.Join(", ", _lastInsertedIds)</p>
    }
    <hr />

    <!-- Delete by partial match. -->
    <h3>Delete</h3>
    <div id="delete">
        <div class="align-contents-vertical">
            <label>Property name (case insensitive) <InputText @bind-Value="_partialDeleteFilterProperty"></InputText></label>
            <label>Property value (case insensitive) <InputText @bind-Value="_partialDeleteFilterValue"></InputText></label>
        </div>
        <button @onclick="@(async () => await DeleteByPartialMatch(_partialDeleteFilterProperty, _partialDeleteFilterValue))">Delete all partial matches</button>
        @if (_deleteResult != null)
        {
            <p>Amount deleted: @_deleteResult.DeletedCount</p>
        }
    </div>
</div>
