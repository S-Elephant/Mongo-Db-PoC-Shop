<!-- Please excuse the dirty code like for example the lack of (S)CSS. -->
@page "/"
@using MongoDbShop.Entities

<h1>Mongo DB Shop test application</h1>
<h2>Databases</h2>

<!-- List all databases. -->
<button @onclick="@(async () => await ListAllDatabases())">ListAllDatabase</button>
<InputTextArea @bind-Value="_output" disabled="true" rows="20" style="width: 100%"></InputTextArea>
<hr/>

<h2>Products</h2>
<!-- List and count all products. -->
<button @onclick="@(async () => await ListAllProducts())">List all products</button>
<button @onclick="@(async () => await CountAllProducts())">Count all products. Counted: @_productCount</button>
@if (_products.Any())
{
    <ul>
        @foreach (Product product in _products)
        {
            <li>[@product.Id1] @product.Name Quantity: @product.Quantity &euro;@product.Price Description: @product.Description</li>
        }
    </ul>
}
else
{
    <p>No products or wrong database or wrong collection.</p>
}
<hr />

<!-- Search for a product. -->
<label>Property name</label>
<InputText @bind-Value="_filterPropertyName"></InputText>
<label>Property value</label>
<InputText @bind-Value="_filterValue"></InputText>
<button @onclick="@(async () => await FilterProduct(_filterPropertyName, _filterValue))">Find/Filter products</button>

@if (_productsFiltered.Any())
{
    <ul>
        @foreach (Product product in _productsFiltered)
        {
            <li>[@product.Id1] @product.Name Quantity: @product.Quantity &euro;@product.Price Description: @product.Description</li>
        }
    </ul>
}
else
{
    <p>No products exist or none matched.</p>
}
<hr />